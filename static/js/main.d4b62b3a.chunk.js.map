{"version":3,"sources":["components/game/index.js","index.js"],"names":["Square","props","className","value","onMouseDown","onMouseUp","onMouseEnter","class","Board","i","this","squares","event","cols","it","col","temp","row","rows","push","renderSquare","React","Component","Game","state","current","history","stepNumber","lMouseDown","rMouseDown","currentAction","changed","seconds","timer","setState","Date","toISOString","substr","interval","setInterval","tick","size","Array","fill","slice","length","concat","button","type","step","appendHistory","onContextMenu","e","preventDefault","onClick","undo","onMouseLeave","squareClick","squareHover","ReactDOM","render","document","getElementById"],"mappings":"qPAGA,SAASA,EAAOC,GACd,OACE,yBACEC,UAAW,iBAAwBD,EAAME,MACzCC,YAAaH,EAAMG,YACnBC,UAAWJ,EAAMI,UACjBC,aAAcL,EAAMK,cAElB,0BAAMC,MAAM,kBAAZ,W,IAKFC,E,qLACSC,GAAI,IAAD,OACd,OACE,kBAACT,EAAD,CACEG,MAAOO,KAAKT,MAAMU,QAAQF,GAC1BL,YAAa,SAACQ,GAAD,OAAW,EAAKX,MAAMG,YAAYQ,EAAOH,IACtDJ,UAAW,kBAAM,EAAKJ,MAAMI,aAC5BC,aAAc,kBAAM,EAAKL,MAAMK,aAAaG,Q,+BAQhD,IAFA,IAAMI,EAAO,GACTC,EAAK,EACAC,EAAM,EAAGA,EAAML,KAAKT,MAAMY,KAAME,IAAO,CAE9C,IADA,IAAIC,EAAO,GACFC,EAAM,EAAGA,EAAMP,KAAKT,MAAMiB,KAAMD,IACvCD,EAAKG,KAAKT,KAAKU,aAAaN,MAE9BD,EAAKM,KAAKH,GAGZ,IADA,IAAME,EAAO,GACJD,EAAM,EAAGA,EAAMP,KAAKT,MAAMiB,KAAMD,IACvCC,EAAKC,KAAK,yBAAKjB,UAAU,aAAaW,EAAKI,KAE7C,OACE,6BACGC,O,GA5BWG,IAAMC,WAwNXC,E,YArLb,WAAYtB,GAAQ,IAAD,8BACjB,4CAAMA,KACDuB,MAAQ,CACXN,KAAM,EACNL,KAAM,EACNY,QAAS,GACTC,QAAS,CAAC,CACRf,QAAS,KAEXgB,WAAY,EACZC,YAAY,EACZC,YAAY,EACZC,cAAe,QACfC,SAAS,EACTC,QAAS,EACTC,MAAO,YAfQ,E,oEAmBX,IAAD,OACLvB,KAAKwB,UAAS,SAAAV,GAAK,MAAK,CACtBQ,QAASR,EAAMQ,QAAU,EACzBC,MAAO,IAAIE,KAAK,KAAQ,EAAKX,MAAMQ,QAAU,IAAII,cAAcC,OAAO,GAAI,S,0CAIzD,IAAD,OAClB3B,KAAK4B,SAAWC,aAAY,kBAAM,EAAKC,SAAQ,KAC/C,IAAMC,EAAO/B,KAAKc,MAAMN,KAAOR,KAAKc,MAAMX,KACpCF,EAAU+B,MAAMD,GAAME,KAAK,SACjCjC,KAAKwB,SAAS,CACZT,QAASd,EACTe,QAAS,CAAC,CACRf,QAASA,Q,sCAMb,GAAKD,KAAKc,MAAMO,QAAhB,CAIA,IAAML,EAAUhB,KAAKc,MAAME,QAAQkB,MAAM,EAAGlC,KAAKc,MAAMG,WAAa,GAC9DF,EAAUf,KAAKc,MAAMC,QAEvBA,IAAYC,EAAQA,EAAQmB,OAAS,GAAGlC,SAC1CD,KAAKwB,SAAS,CACZR,QAASA,EAAQoB,OAAO,CACtB,CACEnC,QAASc,KAGbE,WAAYD,EAAQmB,OACpBd,SAAS,IAIbrB,KAAKwB,SAAS,CACZN,YAAY,EACZC,YAAY,EACZC,cAAe,a,kCAIPlB,EAAOH,GACjB,IACME,EADUD,KAAKc,MAAMC,QACHmB,QACpBhB,EAAalB,KAAKc,MAAMI,WACxBC,EAAanB,KAAKc,MAAMK,WACxBC,EAAgBpB,KAAKc,MAAMM,cAC3BC,EAAUrB,KAAKc,MAAMO,QAEzB,GAAqB,IAAjBnB,EAAMmC,OACW,cAAfnC,EAAMoC,OACRpB,GAAa,EACbE,EAAgC,UAAfnB,EAAQF,GAAkB,SAAW,QACtDE,EAAQF,GAAKqB,EACbC,GAAU,OAEP,IAAqB,IAAjBnB,EAAMmC,OAQf,OAPmB,cAAfnC,EAAMoC,OACRnB,GAAa,EACbC,EAAgC,UAAfnB,EAAQF,GAAkB,SAAW,QACtDE,EAAQF,GAAKqB,EACbC,GAAU,GAKdrB,KAAKwB,SAAS,CACZT,QAASd,EACTiB,WAAYA,EACZC,WAAYA,EACZC,cAAeA,EACfC,QAASA,M,kCAIDtB,GACV,IAAImB,EAAalB,KAAKc,MAAMI,WACxBC,EAAanB,KAAKc,MAAMK,WACxBE,EAAUrB,KAAKc,MAAMO,QAEzB,GAAKH,GAAeC,EAApB,CAEA,IACMlB,EADUD,KAAKc,MAAMC,QACHmB,QACpBd,EAAgBpB,KAAKc,MAAMM,cAE3BA,IAAkBnB,EAAQF,KAC5BE,EAAQF,GAAKqB,EACbC,GAAU,EAKZrB,KAAKwB,SAAS,CACZT,QAASd,EACToB,QAASA,Q,6BAINkB,GACLvC,KAAKwC,gBAELxC,KAAKwB,SAAS,CACZT,QAASf,KAAKc,MAAME,QAAQuB,GAAMtC,QAClCgB,WAAYsB,M,6BAKd,IAAMtB,EAAajB,KAAKc,MAAMG,WAEzBA,GAELjB,KAAKwB,SAAS,CACZT,QAASf,KAAKc,MAAME,QAAQC,EAAa,GAAGhB,QAC5CgB,WAAYA,EAAa,M,+BAInB,IAAD,OAEDF,GADUf,KAAKc,MAAME,QACXhB,KAAKc,MAAMC,SAe3B,OACE,yBAAKvB,UAAU,OAAOiD,cAAe,SAACC,GAAD,OAAMA,EAAEC,mBAC3C,yBAAKnD,UAAU,aACb,6BAAMQ,KAAKc,MAAMS,OACjB,0BAAM1B,MAAM,iBAAiB+C,QAAS,kBAAM,EAAKC,SAAjD,SAEF,yBAAKrD,UAAU,aAAasD,aAAc,kBAAM,EAAKN,kBACnD,kBAAC,EAAD,CACEvC,QAASc,EACTP,KAAMR,KAAKc,MAAMN,KACjBL,KAAMH,KAAKc,MAAMX,KACjBT,YAAa,SAACQ,EAAOH,GAAR,OAAc,EAAKgD,YAAY7C,EAAOH,IACnDJ,UAAW,kBAAM,EAAK6C,iBACtB5C,aAAc,SAAAG,GAAC,OAAI,EAAKiD,YAAYjD,Y,GA9K7BY,IAAMC,W,MC1CzBqC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d4b62b3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <div\r\n      className={'square ' + 'square-' + props.value}\r\n      onMouseDown={props.onMouseDown}\r\n      onMouseUp={props.onMouseUp}\r\n      onMouseEnter={props.onMouseEnter}\r\n    > \r\n        <span class=\"material-icons\">cancel</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onMouseDown={(event) => this.props.onMouseDown(event, i)}\r\n        onMouseUp={() => this.props.onMouseUp()}\r\n        onMouseEnter={() => this.props.onMouseEnter(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const cols = [];\r\n    let it = 0;\r\n    for (let col = 0; col < this.props.cols; col++) {\r\n      let temp = [];\r\n      for (let row = 0; row < this.props.rows; row++) {\r\n        temp.push(this.renderSquare(it++));\r\n      }\r\n      cols.push(temp);\r\n    }\r\n    const rows = [];\r\n    for (let row = 0; row < this.props.rows; row++) {\r\n      rows.push(<div className=\"board-row\">{cols[row]}</div>);\r\n    }\r\n    return (\r\n      <div>\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rows: 5,\r\n      cols: 5,\r\n      current: [],\r\n      history: [{\r\n        squares: [],\r\n      }],\r\n      stepNumber: 0,\r\n      lMouseDown: false,\r\n      rMouseDown: false,\r\n      currentAction: 'empty',\r\n      changed: false,\r\n      seconds: 0,\r\n      timer: \"00:00:00\",\r\n    };\r\n  }\r\n\r\n  tick() {\r\n    this.setState(state => ({\r\n      seconds: state.seconds + 1,\r\n      timer: new Date(1000 * (this.state.seconds + 1)).toISOString().substr(11, 8)\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.tick(), 1000);\r\n    const size = this.state.rows * this.state.cols;\r\n    const squares = Array(size).fill(\"empty\");\r\n    this.setState({\r\n      current: squares,\r\n      history: [{\r\n        squares: squares,\r\n      }],\r\n    });\r\n  }\r\n\r\n  appendHistory() {\r\n    if (!this.state.changed) {\r\n      return;\r\n    }\r\n\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = this.state.current;\r\n\r\n    if (current !== history[history.length - 1].squares) {\r\n      this.setState({\r\n        history: history.concat([\r\n          {\r\n            squares: current,\r\n          }\r\n        ]),\r\n        stepNumber: history.length,\r\n        changed: false,\r\n      });\r\n    } \r\n\r\n    this.setState({\r\n      lMouseDown: false,\r\n      rMouseDown: false,\r\n      currentAction: 'empty',\r\n    });\r\n  }\r\n\r\n  squareClick(event, i) {\r\n    const current = this.state.current;\r\n    const squares = current.slice();\r\n    let lMouseDown = this.state.lMouseDown;\r\n    let rMouseDown = this.state.rMouseDown;\r\n    let currentAction = this.state.currentAction;\r\n    let changed = this.state.changed;\r\n\r\n    if (event.button === 0) {\r\n      if (event.type === \"mousedown\") {\r\n        lMouseDown = true;\r\n        currentAction = (squares[i] === 'empty') ? 'filled' : 'empty';\r\n        squares[i] = currentAction;\r\n        changed = true;\r\n      }\r\n    } else if (event.button === 2) {\r\n      if (event.type === \"mousedown\") {\r\n        rMouseDown = true;\r\n        currentAction = (squares[i] === 'empty') ? 'marked' : 'empty';\r\n        squares[i] = currentAction;\r\n        changed = true;\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n    this.setState({\r\n      current: squares,\r\n      lMouseDown: lMouseDown,\r\n      rMouseDown: rMouseDown,\r\n      currentAction: currentAction,\r\n      changed: changed,\r\n    });\r\n  }\r\n\r\n  squareHover(i) {\r\n    let lMouseDown = this.state.lMouseDown;\r\n    let rMouseDown = this.state.rMouseDown;\r\n    let changed = this.state.changed;\r\n    \r\n    if (!lMouseDown && !rMouseDown) return;\r\n\r\n    const current = this.state.current;\r\n    const squares = current.slice();\r\n    let currentAction = this.state.currentAction;\r\n\r\n    if (currentAction !== squares[i]) {\r\n      squares[i] = currentAction;\r\n      changed = true;\r\n    } else {\r\n      return;\r\n    }\r\n    \r\n    this.setState({\r\n      current: squares,\r\n      changed: changed,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.appendHistory();\r\n    \r\n    this.setState({\r\n      current: this.state.history[step].squares,\r\n      stepNumber: step,\r\n    });\r\n  }\r\n\r\n  undo() {\r\n    const stepNumber = this.state.stepNumber;\r\n\r\n    if (!stepNumber) return;\r\n\r\n    this.setState({\r\n      current: this.state.history[stepNumber - 1].squares,\r\n      stepNumber: stepNumber - 1,\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    const history = this.state.history;\r\n    const current = this.state.current;\r\n\r\n    /*\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    */\r\n\r\n    return (\r\n      <div className=\"game\" onContextMenu={(e)=> e.preventDefault()}>\r\n        <div className=\"game-info\">\r\n          <div>{this.state.timer}</div>\r\n          <span class=\"material-icons\" onClick={() => this.undo()}>undo</span>\r\n        </div>\r\n        <div className=\"game-board\" onMouseLeave={() => this.appendHistory()}>\r\n          <Board\r\n            squares={current}\r\n            rows={this.state.rows}\r\n            cols={this.state.cols}\r\n            onMouseDown={(event, i) => this.squareClick(event, i)}\r\n            onMouseUp={() => this.appendHistory()}\r\n            onMouseEnter={i => this.squareHover(i)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Game from './components/game'\r\nimport \"./index.css\";\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}